#
# File: RevoBoot/i386/MakeInc.dir
#
# Updates:
#
#		- Major cleanup (Pike R. Alpha, October 2012).
#		- Fixed clang compilation (dgsga, November 2012).
#		- Single pass compilation (Pike R. Alpha, November 2012).
#		- Removed unused CPPFLAGS (Pike R. Alpha, November 2012).
#


# Toggle this as to whether you want a frame pointer (%ebp) to be used. It is
# invaluable for debugging the booter. For example using GDB attached to VMware.
# In fact, it's so invaluable that it's now the default.  Not only that but the
# compiler seems to generate slightly smaller code and the real<->prot code
# clearly handles it appropriately so I have no idea why Apple omitted it.
#OMIT_FRAME_POINTER_CFLAG=-fomit-frame-pointer
OMIT_FRAME_POINTER_CFLAG=

NASM = $(shell test $$NASM || which nasm )

.SUFFIXES: .s .i .c .o

.c.o .m.o:
	@echo "\t[CC] $<"
	@$(CC) $(CFLAGS) $(DEFINES) -c $(INC) $< -o $(OBJROOT)/$@

$(OBJROOT)/%.o: %.c
	@echo "\t[CC] $<"
	@$(CC) $(CFLAGS) $(DEFINES) -c $(INC) $< -o $(OBJROOT)/$@

$(OBJROOT)/%.o: %.m
	@echo "\t[M] $<"
	@$(CC) $(CFLAGS) $(DEFINES) -c $(INC) $< -o $(OBJROOT)/$@

boot0:
	@echo "\t[NASM] $(@).s"
	@$(NASM) $(WORKINGPATH)/$@.s -o $(SYMROOT)/$@

boot1h:
	@echo "\t[NASM] $(@).s"
	@$(NASM) $(WORKINGPATH)/$@.s -o $(SYMROOT)/$@

.s.o:
	@echo "\t[AS] $<"
	@$(CC) -c $(INC) -arch i386 $< -o $(OBJROOT)/$@

$(OBJROOT)/boot2.o:
	@echo "\t[AS] boot2.s"
	@$(CC) -Wa,-n -c $(INC) -arch i386 boot2.s -o $(OBJROOT)/$@

$(OBJROOT)/%.o: %.s
	@echo "\t[AS] $<"
	@$(CC) -c $(INC) -arch i386 $< -o $(OBJROOT)/$@

$(DIRS_NEEDED):
	@/bin/mkdir -p $@
